name: Build/release

on: push

jobs:
  release:
    runs-on: windows-latest

    if: |
      startsWith(github.ref, 'refs/tags/v') ||
      contains(github.event.head_commit.message, '[release]')

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9.15.4
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: |
          pnpm install --no-frozen-lockfile
          pnpm rebuild @egoist/electron-panel-window

      - name: Build
        run: pnpm run build
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PUBLISH_TOKEN }}
          USE_HARD_LINKS: false

      - name: Build Windows
        run: pnpm run build:win
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PUBLISH_TOKEN }}
          USE_HARD_LINKS: false

      - name: Upload Windows Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-artifacts
          path: |
            dist/*.exe
            release/build/*.exe
            release/*.exe
            out/make/*.exe

      - name: Release
        run: pnpm run release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PUBLISH_TOKEN }}
          USE_HARD_LINKS: false

      - name: List Build Output
        run: |
          dir dist /s
          dir release /s
          dir out /s
